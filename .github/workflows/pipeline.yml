name: Build and Test Workflow
on:
  push:
    branches:
      - main 
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      PERFORM_RELEASE:
        description: '[Release] perform release'
        required: false
        default: 'false'
        type: boolean
  

jobs:
  check-permission:
    runs-on: ubuntu-latest
    steps:
      # this action will fail the whole workflow if permission check fails
      - name: check permission
        uses: zowe-actions/shared-actions/permission-check@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-test:
    runs-on: ubuntu-latest
    steps: 
      - name: '[Prep 1] Checkout'
        uses: actions/checkout@v2

      - name: '[Prep 2] Cache node modules'
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ~/.nvm/.cache
            ~/.nvm/versions
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
          
      - name: '[Prep 3] Setup Node'
        uses: actions/setup-node@v2
        with:
          node-version: lts/gallium

      - name: '[Pre-Build] Install dependencies'
        run: |
          export HUSKY_SKIP_INSTALL=true
          npm run prebuild


      - name: '[Build] Node.js project build'
        run: npm run build

      - name: '[Lint] Ensure consistent code styling'
        run: npm run lint

      - name: '[Test] Node.js project unit tests'
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: [check-permission, build-test]
    if: ${{ success() && github.event_name == 'push' }}
    steps:
      - name: '[Deploy] Deploy to demo server'
        uses: appleboy/ssh-action@master
        if: ${{ success() && github.event_name == 'push' }}
        with:
          host: ${{ secrets.DEMO_SERVER_HOST }}
          username: ${{ secrets.DEMO_SERVER_USERNAME }}
          key: ${{ secrets.DEMO_SERVER_KEY }}
          script: |
            cd /root/zebra
            git pull origin main
            npm --prefix src install
            forever --uid prod restart


